
# ALasm_ALASMGrammar_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xdd\xbe\xcc\tL\xcdt\xbfY\xc4\x04\xcd\xc8/q\x05'
    
_lr_action_items = {'function':([0,2,3,5,6,7,8,10,18,22,38,],[1,-8,1,-6,-5,-2,-4,-3,-14,-7,-16,]),'comment':([0,2,3,5,6,7,8,10,18,22,23,27,32,33,37,38,51,55,71,72,73,],[2,-8,2,-6,-5,-2,-4,-3,-14,-7,2,2,-18,-20,-19,-16,-32,-21,-29,-31,-30,]),'fNumber':([34,54,58,62,63,67,],[43,43,62,-37,67,-38,]),'labelKeyword':([2,23,27,32,33,37,51,55,71,72,73,],[-8,29,29,-18,-20,-19,-32,-21,-29,-31,-30,]),'semicolon':([20,34,40,43,44,45,46,47,48,49,60,66,68,70,],[26,-26,51,-23,-24,-22,-27,-25,55,56,-28,71,72,73,]),'name':([1,2,11,14,15,16,19,21,23,24,26,27,28,30,31,32,33,34,37,51,54,55,56,71,72,73,],[9,-8,14,20,-10,14,14,-11,34,14,-12,34,39,41,42,-18,-20,44,-19,-32,44,-21,-13,-29,-31,-30,]),'ALASMsetRational':([2,23,27,32,33,37,51,55,71,72,73,],[-8,30,30,-18,-20,-19,-32,-21,-29,-31,-30,]),'code':([12,35,],[17,-15,]),'iNumber':([25,34,50,54,59,64,65,69,],[36,45,57,45,64,-34,69,-35,]),'lBrace':([4,13,17,],[11,19,23,]),'label':([29,34,54,],[40,47,47,]),'lBracket':([20,52,53,],[25,58,59,]),'globals':([0,2,3,5,6,7,8,10,18,22,38,],[4,-8,4,-6,-5,-2,-4,-3,-14,-7,-16,]),'comma':([34,39,41,42,43,44,45,46,47,48,57,60,],[-26,50,52,53,-23,-24,-22,-27,-25,54,61,-28,]),'ALASMsetStr':([2,23,27,32,33,37,51,55,71,72,73,],[-8,28,28,-18,-20,-19,-32,-21,-29,-31,-30,]),'ALASMsetInt':([2,23,27,32,33,37,51,55,71,72,73,],[-8,31,31,-18,-20,-19,-32,-21,-29,-31,-30,]),'rBracket':([36,58,59,62,63,64,65,67,69,],[49,-36,-33,-37,68,-34,70,-38,-35,]),'rBrace':([2,11,15,16,19,21,23,24,26,27,32,33,37,51,55,56,71,72,73,],[-8,-9,-10,22,-9,-11,-17,35,-12,38,-18,-20,-19,-32,-21,-13,-29,-31,-30,]),'string':([61,],[66,]),'locals':([9,],[13,]),'$end':([0,2,3,5,6,7,8,10,18,22,38,],[-1,-8,0,-6,-5,-2,-4,-3,-14,-7,-16,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrStm':([23,27,],[32,37,]),'iValueList':([59,],[65,]),'localVarStm':([9,],[12,]),'fValueList':([58,],[63,]),'varDecl':([11,16,19,24,],[15,21,15,21,]),'varListStm':([11,19,],[16,24,]),'param':([34,54,],[46,60,]),'start':([0,],[3,]),'instrListStm':([23,],[27,]),'commentStm':([0,3,23,27,],[5,5,33,33,]),'codeStm':([12,],[18,]),'functionStm':([0,3,],[6,6,]),'globalVarStm':([0,3,],[8,8,]),'paramListStm':([34,],[48,]),'brick':([0,3,],[7,10,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> <empty>','start',0,'p_start','.\\src\\ALasm.py',188),
  ('start -> brick','start',1,'p_start','.\\src\\ALasm.py',189),
  ('start -> start brick','start',2,'p_start','.\\src\\ALasm.py',190),
  ('brick -> globalVarStm','brick',1,'p_brick','.\\src\\ALasm.py',195),
  ('brick -> functionStm','brick',1,'p_brick','.\\src\\ALasm.py',196),
  ('brick -> commentStm','brick',1,'p_brick','.\\src\\ALasm.py',197),
  ('globalVarStm -> globals lBrace varListStm rBrace','globalVarStm',4,'p_globalVarStm','.\\src\\ALasm.py',207),
  ('commentStm -> comment','commentStm',1,'p_CommentStm','.\\src\\ALasm.py',211),
  ('varListStm -> <empty>','varListStm',0,'p_varListStm','.\\src\\ALasm.py',216),
  ('varListStm -> varDecl','varListStm',1,'p_varListStm','.\\src\\ALasm.py',217),
  ('varListStm -> varListStm varDecl','varListStm',2,'p_varListStm','.\\src\\ALasm.py',218),
  ('varDecl -> name name semicolon','varDecl',3,'p_varDecl','.\\src\\ALasm.py',234),
  ('varDecl -> name name lBracket iNumber rBracket semicolon','varDecl',6,'p_varDeclArray','.\\src\\ALasm.py',239),
  ('functionStm -> function name localVarStm codeStm','functionStm',4,'p_function','.\\src\\ALasm.py',244),
  ('localVarStm -> locals lBrace varListStm rBrace','localVarStm',4,'p_localVarStm','.\\src\\ALasm.py',248),
  ('codeStm -> code lBrace instrListStm rBrace','codeStm',4,'p_codeStm','.\\src\\ALasm.py',252),
  ('instrListStm -> <empty>','instrListStm',0,'p_instrListStm','.\\src\\ALasm.py',256),
  ('instrListStm -> instrStm','instrListStm',1,'p_instrListStm','.\\src\\ALasm.py',257),
  ('instrListStm -> instrListStm instrStm','instrListStm',2,'p_instrListStm','.\\src\\ALasm.py',258),
  ('instrStm -> commentStm','instrStm',1,'p_commentStmInstr','.\\src\\ALasm.py',285),
  ('instrStm -> name paramListStm semicolon','instrStm',3,'p_instrStm','.\\src\\ALasm.py',289),
  ('param -> iNumber','param',1,'p_param','.\\src\\ALasm.py',294),
  ('param -> fNumber','param',1,'p_param','.\\src\\ALasm.py',295),
  ('param -> name','param',1,'p_param','.\\src\\ALasm.py',296),
  ('param -> label','param',1,'p_param','.\\src\\ALasm.py',297),
  ('paramListStm -> <empty>','paramListStm',0,'p_paramListStm','.\\src\\ALasm.py',302),
  ('paramListStm -> param','paramListStm',1,'p_paramListStm','.\\src\\ALasm.py',303),
  ('paramListStm -> paramListStm comma param','paramListStm',3,'p_paramListStm','.\\src\\ALasm.py',304),
  ('instrStm -> ALASMsetStr name comma iNumber comma string semicolon','instrStm',7,'p_ALASMsetStrStm','.\\src\\ALasm.py',318),
  ('instrStm -> ALASMsetInt name comma lBracket iValueList rBracket semicolon','instrStm',7,'p_ALASMsetInt','.\\src\\ALasm.py',343),
  ('instrStm -> ALASMsetRational name comma lBracket fValueList rBracket semicolon','instrStm',7,'p_ALASMsetRational','.\\src\\ALasm.py',375),
  ('instrStm -> labelKeyword label semicolon','instrStm',3,'p_Label','.\\src\\ALasm.py',407),
  ('iValueList -> <empty>','iValueList',0,'p_iValueList','.\\src\\ALasm.py',411),
  ('iValueList -> iNumber','iValueList',1,'p_iValueList','.\\src\\ALasm.py',412),
  ('iValueList -> iValueList iNumber','iValueList',2,'p_iValueList','.\\src\\ALasm.py',413),
  ('fValueList -> <empty>','fValueList',0,'p_fValueList','.\\src\\ALasm.py',427),
  ('fValueList -> fNumber','fValueList',1,'p_fValueList','.\\src\\ALasm.py',428),
  ('fValueList -> fValueList fNumber','fValueList',2,'p_fValueList','.\\src\\ALasm.py',429),
]
