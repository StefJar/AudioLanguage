globals {
}

function DAP26_UI
locals {
		rational oChan3_g;
		limiter oChan2_l;
		delay oChan3_d;
		panel cp_p;
		delay iChan2_d;
		rational oChan2_g;
		delay oChan2_d;
		limiter oChan3_l;
		delay oChan1_d;
		rational oChan1_g;
		button cp_mb;
		limiter oChan1_l;
		integer sel;
		display cp_d;
		biquad oChan4_xo[3];
		biquad oChan3_xo[3];
		string genConst_1;
		integer genConst_2;
		integer genConst_3;
		integer genConst_4;
		string genConst_5;
		string genConst_6;
		biquad oChan4_eq[5];
		biquad oChan2_xo[3];
		biquad oChan1_xo[3];
		integer vpfx3cf;
		biquad oChan2_eq[5];
		biquad iChan1_eq[5];
		biquad oChan1_eq[5];
		limiter oChan4_l;
		biquad iChan2_eq[5];
		delay oChan4_d;
		rational oChan4_g;
		button cp_rb;
		biquad oChan3_eq[5];
		button cp_lb;
		rational iChan2_g;
		string genConst_11;
		led cp_rLED;
		rational genConst_7;
		string genConst_8;
		led cp_gLED;
		integer vpfx2cf;
		string genConst_9;
		rational iChan1_g;
		string genConst_10;
		delay iChan1_d;
}
code {
	ALASMsetInt genConst_4, [0];
	ALASMsetInt genConst_3, [1];
	ALASMsetInt genConst_2, [2];
	ALASMsetStr genConst_11, 0, "input\noutput <-";
	ALASMsetStr genConst_8, 0, "DAP 26";
	ALASMsetStr genConst_1, 0, "gain";
	ALASMsetStr genConst_9, 0, "input <-\noutput";
	ALASMsetStr genConst_10, 0, "aa";
	ALASMsetStr genConst_6, 0, "equalizer";
	ALASMsetStr genConst_5, 0, "delay";
	ALASMsetRational genConst_7, [0.000000];
	//function inline for "UIcontrolInit"
		// the panel ;
		uiSetDim 0, 0, 550, 500, cp_p, 0;
		uiInitPanel 1, cp_p, 0;
		// the display ;
		uiSetDim 10, 10, 500, 300, cp_d, 0;
		uiInitDisplay 11, cp_d, 0, cp_p, 0;
		// left button ;
		uiSetDim 50, 400, 50, 50, cp_lb, 0;
		uiInitButton 21, cp_lb, 0, cp_p, 0;
		// red led ;
		uiSetDim 150, 400, 50, 50, cp_rLED, 0;
		uiInitLED 31, cp_rLED, 0, cp_p, 0;
		// middle button ;
		uiSetDim 250, 400, 50, 50, cp_mb, 0;
		uiInitButton 22, cp_mb, 0, cp_p, 0;
		// green led ;
		uiSetDim 350, 400, 50, 50, cp_gLED, 0;
		uiInitLED 32, cp_gLED, 0, cp_p, 0;
		// right button ;
		uiSetDim 450, 400, 50, 50, cp_rb, 0;
		uiInitButton 23, cp_rb, 0, cp_p, 0;
		// open string ;
		uiSetDisplay cp_d, 0, genConst_8, 0;
		uiSetLED cp_rLED, 0, 0;
		uiSetLED cp_gLED, 0, 0;
	label @labelNr24;
	//function inline for "UIselectInputOutput"
		// display start text ;
		uiSetDisplay cp_d, 0, genConst_9, 0;
		ALASMsetInt sel, [0];
		ALASMsetInt vpfx2cf, [0];
		// loop till the right button is pressed ;
		label @labelNr48;
		compareIntegerNEqual vpfx2cf, 0, genConst_2, 0;
		jumpNCF @labelNr49;
		// check left button ;
		uiCheckButtonPressed cp_lb, 0;
		jumpNCF @labelNr33;
			compareIntegerEqual sel, 0, genConst_4, 0;
			jumpNCF @labelNr31;
				ALASMsetInt sel, [1];
			jump @labelNr32;
			label @labelNr31;
				ALASMsetInt sel, [0];
			label @labelNr32;
			ALASMsetInt vpfx2cf, [1];
		label @labelNr33;
		// check middle button ;
		uiCheckButtonPressed cp_mb, 0;
		jumpNCF @labelNr39;
			compareIntegerEqual sel, 0, genConst_4, 0;
			jumpNCF @labelNr37;
				ALASMsetInt sel, [1];
			jump @labelNr38;
			label @labelNr37;
				ALASMsetInt sel, [0];
			label @labelNr38;
			ALASMsetInt vpfx2cf, [1];
		label @labelNr39;
		// check right button ;
		uiCheckButtonPressed cp_rb, 0;
		jumpNCF @labelNr41;
			uiSetDisplay cp_d, 0, genConst_10, 0;
			ALASMsetInt vpfx2cf, [2];
		label @labelNr41;
		// display new text if something changed ;
		compareIntegerEqual vpfx2cf, 0, genConst_3, 0;
		jumpNCF @labelNr47;
			compareIntegerEqual sel, 0, genConst_4, 0;
			jumpNCF @labelNr45;
				uiSetDisplay cp_d, 0, genConst_9, 0;
			jump @labelNr46;
			label @labelNr45;
				uiSetDisplay cp_d, 0, genConst_11, 0;
			label @labelNr46;
			ALASMsetInt vpfx2cf, [0];
		label @labelNr47;
		jump @labelNr48;
		label @labelNr49;
		compareIntegerEqual sel, 0, genConst_4, 0;
		jumpNCF @labelNr25;
	//function inline for "UIselectInputElement"
		// display start text ;
		uiSetDisplay cp_d, 0, genConst_1, 0;
		ALASMsetInt sel, [0];
		ALASMsetInt vpfx3cf, [0];
		// loop till the right button is pressed ;
		label @labelNr70;
		compareIntegerNEqual vpfx3cf, 0, genConst_2, 0;
		jumpNCF @labelNr71;
		// check left button ;
		uiCheckButtonPressed cp_lb, 0;
		jumpNCF @labelNr55;
			subInteger sel, genConst_3, sel;
			compareIntegerLess sel, 0, genConst_4, 0;
			jumpNCF @labelNr54;
				ALASMsetInt sel, [2];
			label @labelNr54;
			ALASMsetInt vpfx3cf, [1];
		label @labelNr55;
		// check middle button ;
		uiCheckButtonPressed cp_mb, 0;
		jumpNCF @labelNr59;
			addInteger sel, genConst_3, sel;
			compareIntegerMore sel, 0, genConst_2, 0;
			jumpNCF @labelNr58;
				ALASMsetInt sel, [0];
			label @labelNr58;
			ALASMsetInt vpfx3cf, [1];
		label @labelNr59;
		// check right button ;
		uiCheckButtonPressed cp_rb, 0;
		jumpNCF @labelNr61;
			ALASMsetInt vpfx3cf, [2];
		label @labelNr61;
		// display new text if something changed ;
		compareIntegerEqual vpfx3cf, 0, genConst_3, 0;
		jumpNCF @labelNr69;
			compareIntegerEqual sel, 0, genConst_4, 0;
			jumpNCF @labelNr64;
				uiSetDisplay cp_d, 0, genConst_1, 0;
			label @labelNr64;
			compareIntegerEqual sel, 0, genConst_3, 0;
			jumpNCF @labelNr66;
				uiSetDisplay cp_d, 0, genConst_5, 0;
			label @labelNr66;
			compareIntegerEqual sel, 0, genConst_2, 0;
			jumpNCF @labelNr68;
				uiSetDisplay cp_d, 0, genConst_6, 0;
			label @labelNr68;
			ALASMsetInt vpfx3cf, [0];
		label @labelNr69;
		jump @labelNr70;
		label @labelNr71;
		label @labelNr25;
	jump @labelNr24;
}
